<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<body>
	<div class="content-page">
		<!-- Start Content-->
		<div class="content">
			<!-- Start container -->
			<div class="container-fluid">

				<!-- Start page title -->
				<div class="row">
					<div class="col-12">
						<div class="page-title-box">
							<h4 class="page-title">DEVIN</h4>
							<div>
								<ol class="breadcrumb m-0">
									<li class="breadcrumb-item"><a href="javascript: void(0);">BOAT-IN</a></li>
									<li class="breadcrumb-item active">DEVIN</li>
								</ol>
							</div>
						</div>
					</div>
				</div>
				<!-- End page title -->
				
				<!-- Start list-target -->
				<div class="row" id="list-target">
					<!--여기 위의 타겟에 계속 바뀌어서 내용 그려주기 -->
				</div>
				<!--End list-target -->
				
			</div>
			<!-- End container -->
		</div>
		<!-- End Content-->
	</div>
</body>

<!-- Right bar overlay-->
<div class="rightbar-overlay"></div>

<script type="text/javascript">

var globalDivNo; // 댓글삭제하려고 글번호를 하나 전역으로 뺌

$(function(){ renderDevinList_C(); }) // 데브인리스트 그려주기 처음 시작 바로

function drawDataTable(){  }	// 데이터 데이블 그려주기

// 리스트 그리기 시작
function renderDevinList_C() {
  
  axios
    .get("/devin/list")
    .then((res) => {//ajax일때는 success 안에 쓸 것.
    	console.log("게시물", res.data);
    	const json = res.data;
    	
    	let text = ``;
    	text += `<div class="col-12">`;
    	text += `	<div class="card" >`;
    	text += `		<div class="card-body">`;
    	text += `			<h5 class="mt-0">개발자 지식IN</h5> <br>`;
    	text += `			<div class="table-responsive">`;
    	text += `				<div class="inbox-widget" data-simplebar style="max-height: 700px;">`;
    	text += `					<table id="devinList_dataTable"  class="table dt-responsive nowrap w-100 ">`;
    	text += `						<thead>`;
    	text += `							<tr>`;
    	text += `								<th>#</th>`;
    	text += `								<th>제목</th>`;
    	text += `								<th>작성자</th>`;
    	text += `								<th>작성일</th>`;
    	text += `								<th>조회수</th>`;
    	text += `							</tr>`;
    	text += `						</thead>`;
    	text += `						`;
    	text += `						<tbody id="tbody_C">`;
    	
// 			    	json.map(function(elm, idx){
// 			    		text += `<tr>`;
// 				    	text += `<td> \${elm.dviNo} </td>`;
// 				    	text += `<td><a href="javascript:devDetail('\${elm.dviNo}');">\${elm.dviTitle} </a> </td>`;
// 				    	text += `<td> \${elm.memberId} </td>`;
// 				    	text += `<td> \${elm.dviDate} </td>`;
// 				    	text += `<td> \${elm.dviHit} </td>`;
// 				    	text += `</tr>`;
// 			    	});
			    	
    	text += `						</tbody>`;
    	text += `						`;
    	text += `					</table>`;
    	text += `				</div>	`;
    	text += `			</div>`;
    	text += `		</div>`;
    	text += `	</div>`;
    	text += `	<button type="button" class="btn btn-primary" id="newBtn" onclick="renderDevinInsert_C()">등록</button>`;
    	text += `</div>`;
    	
    	document.querySelector("#list-target").innerHTML = text;
    	 
    	var table = $('#devinList_dataTable').DataTable({
    		responsive:true,
    		 retrieve: true,
//    			 scrollX: true,
    		scrollCollapse:true,
    		language: {
    	      emptyTable: "텅~",
    	      lengthMenu: "_MENU_ 개씩 보기",
    	      info: "현재 _START_ - _END_ / _TOTAL_건",
    	      infoEmpty: "데이터 없음",
    	      infoFiltered: "( _MAX_건의 데이터에서 필터링됨 )",
    	      search: "",
    	      zeroRecords: "일치하는 데이터가 없습니다.",
    	      loadingRecords: "로딩중...",
    	      processing: "잠시만 기다려 주세요.",
    	      paginate: {
    	        next: "다음",
    	        previous: "이전",
    	      },
    	    },
    	      order: [ [ 0, "desc" ] ],
    	})
     	table.clear().draw();// 테이블 지우고 다시그려주기 아래!    	
    	for (item of json) { //아작스의 success
    		
			table.row.add([
			`<td> \${item.dviNo} </td> `,
			`<td><a href="javascript:devDetail('\${item.dviNo}');">\${item.dviTitle} </a> </td>`,
			`<td> \${item.memberId} </td>`,
			`<td> \${item.dviDate} </td>`,
			`<td> \${item.dviHit} </td>`,
				]).draw(false);
    	
		}		
		//console.log("리스트 뿌리는 테이블 그리기 :::::: ",text);
    });
  
}
// 리스트 그리기 끝
 
// 리스트에서 그 해당 글번호 해서 그 내용 한줄 가져오기 시작
function devDetail(dviNo) {
	//console.log("조회할 글 번호", dviNo);
	const devVO = {
		dviNo,
	};
	//console.log("보낼 객체(선택 글번호) : ", devVO);

	axios
		.post("/devin/select", devVO)
		.then((res) => {
// 			console.log("data=====>", res.data);
			const data = res.data;
			renderDetail_C(data); // 디테일 화면그리기
// 			alert("불리남?");			
			getMemberDetail_C();	// 댓글 이미지 넣어주기
			
			globalDivNo = dviNo;// 전역에 글번호 담아준다  결국 디테일 볼때 무조건 이걸 거치니까!
		})
}; 
// 리스트에서 그 해당 글번호 선택해서 그 내용 한줄 가져오기 끝
var quill;
// 디테일 화면 그리기
function renderDetail_C(devinMap) {
	console.log("디테일 화면 그릴 때 받은 데이터1 devinMap : ", devinMap);
	console.log("디테일 화면 그릴 때 받은 데이터2 devinMap.devinVO : ", devinMap.devinVO);
	console.log("디테일 화면 그릴 때 받은 데이터3 devinMap.devinVO.dviTitle : ", devinMap.devinVO.dviTitle);
	let text = ``;
	text += `<div class="col-lg-12">`;
	text += `	<div class="card h-100">`;
	text += `   	<div class="card-header">`;
	text += `       	<h2 class="card-title"> \${devinMap.devinVO.dviTitle }</h2>`;
	text += `       	<br>`;
	text += `        		<i class="fe-user"></i>`;
	text += `       	<div class="card-tools">`; 
	text += `           	<img class="me-2 avatar-sm rounded-circle" src="assets/images/users/user-3.jpg" alt="Generic placeholder image"/>&nbsp; \${devinMap.devinVO.memberId } &nbsp;&nbsp;`;
	text += `           	<i class="fe-calendar"></i>&nbsp; \${devinMap.devinVO.dviDate } </div>`;
	text += `        	<div class="card-tools">`;
	text += `           	<i class="fe-list"></i>&nbsp; <span id=cDviNo>\${devinMap.devinVO.dviNo }</span> &nbsp;&nbsp;`;
	text += `           	<i class="fe-thumbs-up"></i><span>&nbsp; \${devinMap.devinVO.dviLike }</span> &nbsp;&nbsp;`;
	text += `           	<i class="fe-eye"></i>&nbsp; \${devinMap.devinVO.dviHit }`;
	text += `        	</div>`;
	text += `    	</div>`;
	text += `    	<div class="card-body">`;
	text += `       	<div class="inbox-widget" id="viewer" data-simplebar style="max-height: 600px;">\${devinMap.devinVO.dviContent }</div>`;
	text += `    	</div>`;
	text += `    	<div class="card-body">`;
	text += `    		<div class="row">`;
	text += `    	    	<div class="col-12">`;
	text += `    	        	<button type="button" class="btn btn-success waves-effect waves-light" onclick="renderDevinList_C()">목록</button>`;
	text += `    	        	<button type="button" class="btn btn-primary waves-effect waves-light" onclick="renderDevinUpdate_C('\${devinMap.devinVO.dviNo}')">수정</button>`;
	text += `    	        	<button type="button" class="btn btn-danger waves-effect waves-light" id="delBtn" onclick="devinDelete_C('\${devinMap.devinVO.dviNo}')">삭제</button>`;
	text += `    	    	</div>`;
    text += `    		</div>`;
	text += `    	</div>`;
	text += `	</div>`;
	text += `</div></hr>`;
	
	/* 이부분 댓글 넣을 부분인데 확인하기! */
	text += `<div class="col-lg-12">`;
	text += `	<div class="card">`;
	text += `		<div class="card-body">`;
    text += ``;
    text += `			<!-- Story Box-->`;
    text += `			<!-- 여기를 댓글 리스트로 뿌려줘야겠다  박스채로 추가되면 아작스로 보내면 될듯 보내고 추가로 바로 그려서 비동기 ㄱㄱ -->`;

	const devinCommentList = devinMap.devinList;
	for(var i=0; i<devinCommentList.length; i++){
		console.log("=========================================");
		console.log("devinCommentList[i] :::: ", devinCommentList[i]);
		console.log("=========================================");
		console.log("devinCommentList[i].dviComentContent :::: ", devinCommentList[i].dviComentContent);
		console.log("=========================================");
		console.log("devinCommentList[i].dviComentNo :::::", devinCommentList[i].dviComentNo);
		console.log("=========================================");
	    text += `			<!-- Story Box-->`;
	    text += `			<div class="border border-light p-2 mb-3">`;
	    text += `				<div class="d-flex align-items-start">`;
	    text += `					<img class="me-2 avatar-sm rounded-circle" src="assets/images/users/user-4.jpg" alt="Generic placeholder image">`;
	    text += `					<div class="w-100">`;
	    text += `						<h5 class="">`;
	    text += `							\${devinCommentList[i].memberId } <small class="text-muted"> \${devinCommentList[i].dviComentDate }</small>`;
	    text += `						</h5>`;
	    text += `						<div class="" id="dviComentUpdate">`;
// 	    text += `							댓글 내용 가져오기Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. <br /> `;
		text += `                      \${devinCommentList[i].dviComentContent }`
		text += `						</div>`;
	    text += `					</div>`;
		text += `				</div>`;
		text += `				<div class="col-lg-12 col-sm-12 text-lg-end ">`;
		text += `					<a href="javascript: void(0);" class="btn btn-sm btn-link text-danger"><i class="mdi mdi-heart"></i> Like (28)</a> `;
		text += `					<a href="javascript: comentUpdate('\${devinCommentList[i].dviComentNo}');" class="btn btn-sm btn-link text-primary"><i class="mdi mdi-lead-pencil"></i> 수정</a> `;
		text += `					<a href="javascript: comentdelete('\${devinCommentList[i].dviComentNo}');" class="btn btn-sm btn-link text-secondary"><i class="mdi mdi-delete"></i> 삭제</a>`;
		text += `				</div>`;
		text += `				<div class="d-flex align-items-start mt-2">`;
		text += `					<a class="pe-2" href="#"> <img src="assets/images/users/user-1.jpg" class="rounded-circle" alt="Generic placeholder image" height="31">`;
		text += `					</a>`;
		text += `					<div class="w-100" style="background-color: #f2f8fb;">`;
		text += `						<input type="text" id="simpleinput" class="form-control border-0 form-control-sm" placeholder="Add comment">`;
		text += `					</div>`;
		text += `				</div>`;
		text += `			</div>`;
		text += `			<!-- Story Box end-->`;
	}
	
	
	text += ``;
	text += ``;
	text += `			<!-- comment box -->`;
	text += `			<div class="border border-light p-2 mb-3">`;
	text += `				<div class="d-flex align-items-start">`;
	text += `						<img  id="memberidImage" class="me-2 avatar-sm rounded-circle" src="assets/images/users/user-4.jpg" alt="해당 회원 이미지 가져오기">`;
	text += `					<div class="w-100">`;
	text += `						<h5 class="">\${memberId}</h5>`;
	text += `						<input type="hidden" name="dviComentNo" id="dviComentNo" value="" /> <input type="hidden" name="dviNo" id="dviNo"/> <input type="hidden" name="memberId" id="memberId" value="" />`;
	text += `						<div class="mb-3" id="quillContainer" style="height: 200px; margin-bottom: 1em; overflow: auto;">`;
	text += `							<div id="contentDiv"></div>	`;							
	text += `						</div>`;
	text += `						<input type="hidden" name="dviComentContent" id="dviComentContent" value="">`;
	text += `						<br>`;
	text += `					</div>`;
	text += `				</div>`;
	text += `				<div class="col-lg-12 col-sm-12 text-lg-end ">`;
	text += `					<a href="javascript: void(0);" class="btn btn-sm btn-link text-muted"><i class="mdi mdi-share-variant"></i> Share</a>`; 
	text += `					<a href="javascript: comentInsert();" class="btn btn-sm btn-link text-primary"><i class="mdi mdi-lead-pencil"></i> 등록</a>`;
	text += `				</div>`;
	text += `			</div>`;
	text += `			<!-- end comment box -->`;
	text += ``;
	text += `		</div>`;
	text += `		<!-- card-body end -->`;
	text += `	</div>`;
	text += `	<!-- card end -->`;
	text += ``;
	text += `</div>`;
	text += `<!-- end col -->`;

	document.querySelector("#list-target").innerHTML = text;
	//console.log(text);
	console.log("퀼 : ", document.querySelector("#contentDiv"));
	   var toolbarOptions = [
	        ['bold', 'underline'],        // toggled buttons
	        ['blockquote', 'code-block'],

	        [{ 'header': 1 }, { 'header': 2 }],               // custom button values
	        [{ 'list': 'ordered'}, { 'list': 'bullet' }],
	        //[{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
	        //[{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
	        [{ 'direction': 'rtl' }],                         // text direction

	        //[{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
	        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

	        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
	        //[{ 'font': [] }],
	        [{ 'align': [] }],

	        ['clean']                                         // remove formatting button
	      ];
	    
	    
	     quill = new Quill("#contentDiv", {
	        theme: 'snow',
	        modules: {
	          toolbar: toolbarOptions,
	          syntax: true,
	        },
	        placeholder: '내용을 입력하세요..',
	    });
	    
	    $("#toolbar").append($(".ql-toolbar"));
	    
	    
	// 디테일에도 에디터가 필요하고
	const Editor = toastui.Editor;
	// 뷰어도 필요햏!!!
	const viewer = Editor.factory({
	  el: document.querySelector('#viewer'),
	  viewer: true,
	  height: '500px',
	  initialValue: '${devinVO.dviContent }'
	});
	
}  
// 디테일 화면 그리기 끝

// 댓글 삭제 버튼 이벤트
function comentdelete(dvicomentNo){
	var dvicomentNoVO = {
			dviComentNo : dvicomentNo
	};
	//debugger; // jsp 화면에서 디버그하기..! 왕신기
	console.log("dvicomentNoVO",dvicomentNoVO);
	
	if (!confirm("정말 삭제하시겠습니까?")) {
		return;
	}
	 
	axios
	  .post("/devin/devinComentDelete", dvicomentNoVO)
	  .then((res) => {
		 console.log("res댓글 삭제 되누?",res);
		 devDetail(globalDivNo);
	  });
		
}

// 댓글 업데이트 버튼 이벤트
function comentUpdate(dvicomentNo){
	var dvicomentNoVO = {
			dviComentNo : dvicomentNo
	};
	//debugger;
	console.log("dvicomentNoVO",dvicomentNoVO);
	
	// 여기서 번호랑 그 콘텐츠 내용을 아작스로 보내야해
	// 보내야하는 그 영역을 찾아서 내용을 변경해야해... 흠
	// 댓글을 수정하면 모든 리스트를 다시 뿌려줘야하는지 확인 그렇게 되면 디테일을 다시 뿌려야하는데 글번호를 담아서 다시 불러줘야함
	//  devDetail(globalDivNo); < 아마 이걸 다시? ㅎㅎㅎ
	// 아니면 댓글 그부분만 뿌려줄 수 있는지 확인하기		
	
	console.log("#dviComentUpdate 안의 내용찍어",document.querySelector("#dviComentUpdate").innerHTML)
	// #dviComentUpdate 이부분의 div를 다시 그려주는게 좋을듯 이걸 text같은걸로 할 수 있나?
	// 댓글 수정시 에디터를 사용해야한다.
	// 성공시 이부분만 리로드되도록 해야함!
	// 확인할 것
}

// 댓글 인서트 등록! 버튼이벤트
function comentInsert(){
	//alert("클릭됨!?");
    let text = document.querySelector(".ql-editor").innerHTML;
    console.log("#contentDiv 채진영 퀄내용 :",text);
    
    var editor_content = quill.container.innerHTML
    console.log("#contentDiv editor_content :",editor_content);
    
	//document.querySelector("#test1").innerHTML = text;
	
	var memberId = localStorage.getItem("id")
	//console.log("memberId 채진영 아이디 : ", memberId)
	$("#memberId").val(memberId)
		
    let sendData = {
    	memberId: memberId,
    	dviNo: document.querySelector("#cDviNo").innerHTML.trim(),
    	dviComentContent : text
    };
    
    console.log("sendData(아디,글제목번호,댓글내용)::::: ",sendData);
    
    $.ajax({
    	type:"post",
    	url:"/devin/devinComentInsert",
    	data:JSON.stringify(sendData),
    	contentType:"application/json;charset=utf-8",
    	dataType:"json",
    	success:function(rslt){
    		console.log("항상확인:",rslt);
    		console.log("원하는값:",rslt.dviNo);
    		//devDetail(rslt.getDviNo());
    		//devDetail(rslt.dviNo);
    		//devComentDetail(rslt);
    		devDetail(rslt.dviNo);
    		
    		document.querySelector("#quillContainer").innerHTML = `<div id="contentDiv"></div>`;
    	}
    })
	
}

// 해당 아이디 찾아서 이미지 호출(로컬스토리지 사용)
function getMemberDetail_C(){
	//alert("불리남2222?");
	   var memberId ={
	         memberId : localStorage.getItem('id')
	   }
	   $.ajax({
	      url : "/member/selectMember",
	      type : "post",
	      data : JSON.stringify(memberId),
	      contentType : 'application/json; charset=utf-8',
	      dataType : 'json',
	      success : function(res) {
	         console.log("res",res)
	         console.log("res.memberPic",res.memberPic)
	         $("#memberidImage").attr('src',res.memberPic)
	      },
	   });//ajax
}

// 인서트그리기 시작
function renderDevinInsert_C() {
	let text = ``;
	
			text += `<div class="col-lg-12">`;
			text += `	<div class="card h-100">`;
			text += `			<input type="hidden" name="dviNo" /> <input type="hidden" name="memberId" id="memberId" value="" />`;
			text += `			<div class="card-body">`;
			text += `				<div class="form-group">`;
			text += `					<label for="inputName">제목</label> <input type="text" id="dviTitle" name="dviTitle" value="" class="form-control" placeholder="제목을 입력해주세요"><br>`;
			text += `				</div>`;
			text += `				<div class="form-group">`;
			text += `					<label for="inputName">내용</label>`;
			text += `					<div id="editor" class="form-control" style="height:550px;"></div>`;
			text += `					<br>`;
			text += `					<div id="contents"></div>`;
			text += `					<input type="hidden" name="dviContent" id="concon" value="">`;
			text += `				</div>`;
			text += `				<div class="row">`;
			text += `					<div class="col-12">`;
			text += `						<input type="button" value="목록" id="listBtn" class="btn btn-success waves-effect waves-light" onclick="renderDevinList_C()">`; 
			text += `						<input type="submit" value="등록" id="formBtn" class="btn btn-primary waves-effect waves-light" >`;
			text += `					</div>`;
			text += `				</div>`;
			text += `			</div>`;
			text += `	</div>`;
			text += `</div>`;
			
			document.querySelector("#list-target").innerHTML = text;
	
	const Editor = toastui.Editor;
	
	const editor = new Editor({
		  el: document.querySelector('#editor'),
		  height: '550px',
		  initialEditType: 'markdown',
		  previewStyle: 'vertical'
	});
	//console.log(document.querySelector("#insert-target"));
	//console.log("인서트 할 객체(#insert-target)",text);
	
	
	var memberId = localStorage.getItem("id")
	//console.log("memberId : ", memberId)
	$("#memberId").val(memberId)

	var formBtn = $("#formBtn");
	
	formBtn.on("click", function(){
		
		if($('#dviTitle').val() == null || $("#dviTitle").val() == ""){
			alert("제목을 입력해주세요.");
			$("#dviTitle").focus();
			return false;
		}
 		//alert(editor.getHTML()); // 글쓰기시 토스트ui내용 가져오기 알럿창
 		const dviTitle = document.getElementById('dviTitle').value;
        //console.log("dviTitle",dviTitle) //콘솔에 제목 안에 text 찍힘
 		
        let sendData = {
        	memberId: memberId,
        	dviTitle: dviTitle,
        	dviContent : editor.getHTML().replaceAll('"',"'")
        };
//         if (dviNo) {
//         	sendData.dviNo = dviNo;
//         }
        //console.log("sendData:아디,글제목,글내용",sendData);
        
        $.ajax({
        	type:"post",
        	url:"/devin/insert2",
        	data:JSON.stringify(sendData),
        	contentType:"application/json;charset=utf-8",
        	dataType:"json",
        	success:function(rslt){
        		console.log("항상확인:",rslt);
        		console.log("원하는값:",rslt.dviNo);
        		//devDetail(rslt.getDviNo());
        		devDetail(rslt.dviNo);
        	}
        })
        
 		//console.log("editor.getHTML()", editor.getHTML());
 		cont = editor.getHTML();
 		conte = cont.replaceAll('"',"'")
 		//console.log("아작스용",sendData);
 		
// 		conte = cont.replace("<p>","")
// 		conten = conte.replace("</p>","")
// 		content = conten.replace("<br>","")
		
		$("#concon").val(conte);
	})
	
}
// 인서트그리기 끝

// 업데이트 그리기 시작
function renderDevinUpdate_C(dviNo) {
	// 여기서 기존의 화면을 보여주고 그부분을 다시 지워줘야하는데 타켓부분

	console.log("수정할 게시글 번호 dviNo : ", dviNo);
	const devInVO = {
	  dviNo,	
	};
	
	axios
	  .post("/devin/select", devInVO)
	  .then((res) => {
		 console.log("수정할 대상 res.data : ", res.data);
		 console.log("수정할 대상 찐찐찐res.data.devinVO : ", res.data.devinVO);
		 const item = res.data.devinVO;
		 let text = ``;
		 
		 text += `<div class="col-lg-12">`;
		 text += `	<div class="card h-100">`;
		 text += `			<input type="hidden" name="dviNo" /> <input type="hidden" name="memberId" id="memberId" value="" />`;
		 text += `			<div class="card-body">`;
		 text += `				<div class="form-group">`;
		 text += `					<label for="inputName">제목</label> <input type="text" id="dviTitle" name="dviTitle" value="\${item.dviTitle}" class="form-control" placeholder="제목을 입력해주세요"><br>`;
		 text += `				</div>`;
		 text += `				<div class="form-group">`;
		 text += `					<label for="inputName">내용</label>`;
		 text += `					<div id="editor" class="form-control" style="height:550px;"></div>`;
		 text += `					<br>`;
		 text += `					<div id="contents"></div>`;
		 text += `					<input type="hidden" name="dviContent" id="concon" value="\${item.dviContent}">`;
		 text += `				</div>`;
		 text += `				<div class="row">`;
		 text += `					<div class="col-12">`;
		 text += `						<input type="button" value="목록" id="listBtn" class="btn btn-success waves-effect waves-light" onclick="renderDevinList_C()">`; 
		 text += `						<button type="submit" id="updateBtn" class="btn btn-primary waves-effect waves-light" >수정</button>`;
		 text += `					</div>`;
		 text += `				</div>`;
		 text += `			</div>`;
		 text += `	</div>`;
		 text += `</div>`;
		 
		 document.querySelector("#list-target").innerHTML = text;
		 
		 const Editor = toastui.Editor;
			
		 const editor = new Editor({
		 	  el: document.querySelector('#editor'),
		 	  height: '550px',
		 	  initialEditType: 'markdown',
		 	  previewStyle: 'vertical'
		 });
		 
		 const concon = editor.setHTML(item.dviContent);
		 
		 var updateBtn = $("#updateBtn");
		 
		 //업데이트 전송
		 updateBtn.on("click", () => {
			//console.log("ddddd"); 
			//console.log(editor.getHTML());
			const dviTitle = document.querySelector("#dviTitle").value;
			const dviContent = editor.getHTML().replaceAll('"', "'");
			
			const vo = {
			  dviNo,
			  dviTitle,
			  dviContent,
			};
			
			console.log("그려주고 수정할거vo(dviNo, dviTitle, dviContent,) : ", vo);
			
			//전송
			axios
			  .post("/devin/update2", vo)
			  .then((res) => {
				  console.log("update2 :", res);
				  renderDetail_C(res.data);
			  });
		 });
	  });
}
//업데이트 그리기 끝

//게시글 삭제 - 김진호
function devinDelete_C(dviNo) {
	const devInVO = {
	  dviNo,	
	};
	
	if (!confirm("정말 삭제하시겠습니까?")) {
		return;
	}
	
	axios
	  .post("/devin/delete", devInVO)
	  .then((res) => {
		 //console.log(res);
		 renderDevinList_C();
	  });
}
</script>