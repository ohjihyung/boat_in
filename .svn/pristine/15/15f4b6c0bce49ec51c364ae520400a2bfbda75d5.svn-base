<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<body>
<!-- Start Content-->
<div class="content">
	<!-- Start container -->
	<div class="container-fluid">

		<!-- Start page title -->
		<div class="row">
			<div class="col-12">
				<div class="page-title-box">
					<h4 class="page-title">PROJECT NOTICE</h4>
					<div>
						<ol class="breadcrumb m-0">
							<li class="breadcrumb-item"><a href="javascript: void(0);">BOAT-IN</a></li>
							<li class="breadcrumb-item active">PROJECT NOTICE</li>
						</ol>
					</div>
				</div>
			</div>
		</div>
		<!-- End page title -->

		<!-- Start list-target -->
		<div class="row" id="list-target">
			<!--여기 위의 타겟에 계속 바뀌어서 내용 그려주기 -->
		</div>
		<!--End list-target -->

	</div>
	<!-- End container -->
</div>
<!-- End Content-->

</body>

<script type="text/javascript">
console.log("proNo : ", proNo);
var globalProNo = proNo;
console.log("globalProNo : ", globalProNo) // 해당글번호 전역번호 선언?

$(function(){ renderPronoticeList_C(); }) // 데브인리스트 그려주기 처음 시작 바로

function drawDataTable(){  }	// 데이터 데이블 그려주기

// 리스트 그리기 시작
function renderPronoticeList_C() {
  str = "/projectNotice/projectNoticeList?proNo="+proNo
		  
  axios
    .get(str)
    .then((res) => {//ajax일때는 success 안에 쓸 것.
    	console.log("게시물(프젝공지사항List) ::", res.data);
    	const json = res.data;
    	
    	let text = ``;
    	text += `<div class="col-12">`;
    	text += `	<div class="card" >`;
    	text += `		<div class="card-body">`;
    	text += `			<h5 class="mt-0">프로젝트 공지사항</h5> <br>`;
    	text += `			<div class="table-responsive">`;
    	text += `				<div class="inbox-widget" data-simplebar style="max-height: 700px;">`;
    	text += `					<table id="pronoticeList_dataTable"  class="table dt-responsive nowrap w-100 ">`;
    	text += `						<thead>`;
    	text += `							<tr>`;
    	text += `								<th>#</th>`;
    	text += `								<th>제목</th>`;
    	text += `								<th>작성자</th>`;
    	text += `								<th>작성일</th>`;
    	text += `							</tr>`;
    	text += `						</thead>`;
    	text += `						`;
    	text += `						<tbody id="tbody_C">`;
    				    	
    	text += `						</tbody>`;
    	text += `						`;
    	text += `					</table>`;
    	text += `				</div>	`;
    	text += `			</div>`;
    	text += `		</div>`;
    	text += `	</div>`;
    	text += `	<button type="button" class="btn btn-primary" id="newBtn" onclick="renderPronoticeInsert_C()">등록</button>`;
    	text += `</div>`;
    	
    	document.querySelector("#list-target").innerHTML = text;
    	 
    	var table = $('#pronoticeList_dataTable').DataTable({
    		responsive:true,
    		retrieve: true,
    		scrollCollapse:true,
    		language: {
    	      emptyTable: "텅~",
    	      lengthMenu: "_MENU_ 개씩 보기",
    	      info: "현재 _START_ - _END_ / _TOTAL_건",
    	      infoEmpty: "데이터 없음",
    	      infoFiltered: "( _MAX_건의 데이터에서 필터링됨 )",
    	      search: "",
    	      zeroRecords: "일치하는 데이터가 없습니다.",
    	      loadingRecords: "로딩중...",
    	      processing: "잠시만 기다려 주세요.",
    	      paginate: {
    	        next: "다음",
    	        previous: "이전",
    	      },
    	    },
    	      order: [ [ 0, "desc" ] ],
    	})
     	table.clear().draw();// 테이블 지우고 다시그려주기 아래!    
     	
    	for (item of json) { //아작스의 success
    		
			table.row.add([
			`<td> \${item.proNoticeNo} </td> `,
			`<td><a href="javascript:PronoticeDetail('\${item.proNoticeNo}');">\${item.proNoticeTitle} </a> </td>`,
			`<td> \${item.memberName} </td>`,
			`<td> \${item.proNoticeDate} </td>`,
				]).draw(false);
    	
		}		
		//console.log("리스트 뿌리는 테이블 그리기 :::::: ",text);
    });
  
}
// 리스트 그리기 끝

// 인서트그리기 시작
function renderPronoticeInsert_C() {
	globalProNo; // 해당 프로젝트번호의 전역변수 불러오기
	
	let text = ``;
	
		text += `<div class="col-lg-12">`;
		text += `	<div class="card h-100">`;
		text += `		<form>`;
		text += `		<input type="hidden" name="proNoticeNo" /><input type="hidden" name="proNo" id="proNo" value=""/> <input type="hidden" name="memberId" id="memberId" value="" />`;
		text += `		<div class="card-body">`;
		text += `			<div class="form-group">`;
		text += `				<label for="inputName">제목</label> <input type="text" id="proNoticeTitle" name="proNoticeTitle" value="" class="form-control" placeholder="제목을 입력해주세요"><br>`;
		text += `			</div>`;
		text += `			<div class="form-group">`;
		text += `				<label for="inputName">내용</label>`;
		text += `				<div id="editor" class="form-control" style="height:300px;"></div>`;
		text += `				<br>`;
		text += `				<div id="contents"></div>`;
		text += `				<input type="hidden" name="proNoticeContent" id="concon" value="">`;
		text += `			</div>`;
		text += `
							
							<div class="mb-3">
				            <label class="form-label">File</label>
				            <input
				              class="form-control"
				              id="event-file"
				              type="file"
				              multiple
				            />
				          </div>
				
				`;
		text += `			<div class="row">`;
		text += `				<div class="col-12">`;
		text += `					<input type="button" value="목록" id="listBtn" class="btn btn-success waves-effect waves-light" onclick="renderPronoticeList_C()">`; 
		text += `					<input type="submit" value="등록" id="formBtn" class="btn btn-primary waves-effect waves-light" >`;
		text += `				</div>`;
		text += `			</div>`;
		text += `		</div>`;
		text += `		</form>`;
		text += `	</div>`;
		text += `</div>`;
		
		document.querySelector("#list-target").innerHTML = text;
	
	const Editor = toastui.Editor;
	
	const editor = new Editor({
		  el: document.querySelector('#editor'),
		  height: '300px',
		  initialEditType: 'markdown',
		  previewStyle: 'vertical'
	});
	//console.log(document.querySelector("#insert-target"));
	//console.log("인서트 할 객체(#insert-target)",text);
	
	
	
	var memberId = localStorage.getItem("id")
	//console.log("memberId : ", memberId)
	$("#memberId").val(memberId)

	var formBtn = $("#formBtn");
	
	formBtn.on("click", function(){
		
		if($('#proNoticeTitle').val() == null || $("#proNoticeTitle").val() == ""){
			alert("제목을 입력해주세요.");
			$("#proNoticeTitle").focus();
			return false;
		}
 		//alert(editor.getHTML()); // 글쓰기시 토스트ui내용 가져오기 알럿창
 		const proNoticeTitle = document.getElementById('proNoticeTitle').value;
        //console.log("proNoticeTitle",proNoticeTitle) //콘솔에 제목 안에 text 찍힘
 		
        let sendData = {
        	// 키 : 값 이런 느낌이야! 키의 내용이 붙어서 나오지요~
        	memberId: memberId,
        	proNo: globalProNo,
        	proNoticeTitle: proNoticeTitle,
        	proNoticeContent : editor.getHTML().replaceAll('"',"'")
        };
        console.log("sendData : ", sendData)
        
        
        //파일 전송시에는  formdata 에다가 담아서 보내줘야한다 
        // ??? 그러면 내가 따로 담아주고 싶은 데이터는?  formdata에 append 해주면 됩니다.
        // 파일 업로드 하는 ajax 구조 는 
        
        
        $.ajax({
        	type:"post",
        	url:"/projectNotice/insert",
        	data:JSON.stringify(sendData),
        	contentType:"application/json;charset=utf-8",
        	dataType:"json",
        	success:function(rslt){
        		console.log("항상확인:",rslt);
        		console.log("원하는값:",rslt.proNoticeNo);
//         		devDetail(rslt.dviNo);
        	}
        })
        
 		//console.log("editor.getHTML()", editor.getHTML());
 		cont = editor.getHTML();
 		conte = cont.replaceAll('"',"'")
 		//console.log("아작스용",sendData);
 		
// 		conte = cont.replace("<p>","")
// 		conten = conte.replace("</p>","")
// 		content = conten.replace("<br>","")
		
		$("#concon").val(conte);
	})
	
}
// 인서트그리기 끝



</script>
