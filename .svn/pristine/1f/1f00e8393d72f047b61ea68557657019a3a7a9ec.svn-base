<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<style>
	#chat_modal {
		display : none;
		width : 300px;
		padding : 20px 60px;
		border : 1px solid #888;
		border-radius : 3px;
	}
	
	#chat_modal .chat_modal_close_btn {
		position :absolute;
		top :10px;
		right : 10px;
	}
	#chatWrap {
    width: 600px;
    border: 2px solid #ddd;
    margin-left : 80px;
  
}

	#chatHeader {
	    height: 50px;
	    text-align: center;
	    line-height: 60px;
	    font-size: 25px;
	    font-weight: 900;
	    border-bottom: 1px solid #ddd;
	}
	
	#chatLog {
	    height: 700px;
	    overflow-y: auto;
	  	scrollbar-width: none;
	    padding: 10px;
	}
	
	.myMsg {
	    text-align: right;
	}
	
	.anotherMsg {
	    text-align: left;
	    margin-bottom: 5px;
	}
	
	.msg {
	    display: inline-block;
	    border-radius: 15px;
	    padding: 7px 15px;
	    margin-bottom: 10px;
	    margin-top: 5px;
	}

	.anotherMsg > .msg {
	    background-color: #f1f0f0;
	
	}
	
	.myMsg > .msg {
	    background-color: #0084FF;
	    color: #fff;
	}
	
	.anotherName {
	    font-size: 12px;
	    display: block;
	}
	
	#chatForm {
	    display: block;
	    width: 100%;
	    height: 50px;
	    border-top: 2px solid #f0f0f0;
	}
	
	#message {
	    width: 85%;
	    height: calc(100% - 1px);
	    border: none;
	    padding-bottom: 0;
	}
	
	#message:focus {
	    outline: none;
	}
	
	#chatForm > input[type=text] {
	    outline: none;
	    border: none;
	    background: none;
	    color: #0084FF;
	    font-size: 17px;
	}
</style>
<div class="content-page">
	<div class="content" style="height: 800px;">
		<!-- Start Content-->
		<div class="container-fluid" style="display:flex;margin: 30px;height: 100%;">
			<div class="col-xl-3">
				<div class="card" style="height: 100%;">
					<div class="card-body">
						<h4 class="header-title mb-3">
							채팅방 <i class="mdi mdi-account-multiple ms-1"></i>
							<div>
							<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#signup-modal">채팅방 생성</button>
							</div>
						</h4>
						<div class="list-group">
							<a href="javascript:openRoom(123)" class="list-group-item list-group-item-action">
								<div class="d-flex align-items-center pb-1" id="tooltips-container" >
									<img src="/assets/images/users/user-5.jpg" class="rounded-circle img-fluid avatar-md img-thumbnail bg-transparent"  style="z-index:5;">
									<img src="/assets/images/users/user-5.jpg" class="rounded-circle img-fluid avatar-md img-thumbnail bg-transparent"  style="z-index:10;position:relative;right:40px; ">
									<img src="/assets/images/users/user-5.jpg" class="rounded-circle img-fluid avatar-md img-thumbnail bg-transparent"  style="z-index:15;position:relative;right:80px;">
									<div class="w-100 ms-2">
										<h5 class="mb-1">
											1번chat팅방
										</h5>
<!-- 										<p class="mb-0 font-13 text-muted">Co Founder</p> -->
									</div>
									<i class="mdi mdi-chevron-right h2"></i>
								</div>
							</a> 
							<a href="javascript:openRoom(124)" class="list-group-item list-group-item-action" >
								<div class="d-flex align-items-center pb-1" id="tooltips-container" >
									<img src="/assets/images/users/user-5.jpg" class="rounded-circle img-fluid avatar-md img-thumbnail bg-transparent" alt="">
									<div class="w-100 ms-2">
										<h5 class="mb-1">
											2번chat팅방
										</h5>
<!-- 										<p class="mb-0 font-13 text-muted">Co Founder</p> -->
									</div>
									<i class="mdi mdi-chevron-right h2"></i>
								</div>
							</a> 
						</div>
					</div>
				</div>
			</div>
			<!-- container -->
			<div class="col-xl-8" style="height: auto;">
					<div class="card" style="height: 100%;"> 
									  <div id="chatWrap">
								            <div id="chatHeader">Everyone</div>
								            <div id="chatLog">
								                <div class="anotherMsg">
								                	<div>
									                    <img class="me-2 avatar-sm rounded-circle" src="/resources/src/images/users/user-3.jpg" alt="Generic placeholder image" style="float:left">
									                    <span class="anotherName">BOAT in</span>
								                	</div>
								                    <span class="msg">Hello, Nice to meet you.</span>
								                    <span style="font-size : 4px">&nbsp&nbsp10:23</span>
								                </div>
								                <div class="myMsg">
								                    <span style="font-size : 4px">10:23 &nbsp&nbsp</span>
								                    <span class="msg">Nice to meet you, too.</span>
								                </div> 
								            </div>
								            <div id="chatForm">							       
								                	<input type="text" autocomplete="off" size="30" id="message" placeholder="메시지를 입력하세요" onkeydown="fnEnterKey()">
								                	<input type="button" class="btn btn-purple waves-effect waves-light"  id="send"  value="SEND" >
								                	<input type="hidden" id="id_exit" value="나갈령">
								              
								            </div>
									 </div> 
							 </div> <!-- end of card -->
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- 새로운방 만드는 모달창 -->
  <!-- makeRoom modal content -->
<div id="signup-modal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-body">
				<div class="auth-logo text-center mt-2 mb-4">
					<a href="index.html" class="logo logo-dark"> <span class="logo-lg"> <img src="../assets/images/logo-dark.png" alt="" height="20">
					</span>
					</a> <a href="index.html" class="logo logo-light"> <span class="logo-lg"> <img src="../assets/images/logo-light.png" alt="" height="20">
					</span>
					</a>
				</div>

				<form id="createForm" class="px-3" action="javascript:createRoom()">
					<div class="mb-3">
						<label for="chatRoomName" class="form-label">채팅방 이름</label> <input class="form-control" type="text" id="chatRoomName" required="" placeholder="채팅방 이름">
					</div>

					<div class="mb-3">
						<label for="chatRoomMember" class="form-label">초대할 인원</label> <input class="form-control" type="text" id="emailaddress" required="" placeholder="boat123@boat.com">
					</div>

					<div class="mb-3">
						<label for="chatRoomLimit" class="form-label">최대 인원</label> <input class="form-control" type="text" required="" id="" placeholder="3">
					</div>
					<div class="mb-3 text-center">
						<button class="btn btn-primary" type="submit">생성</button>
					</div>
				</form>
			</div>
		</div>
		<!-- /.modal-content -->
	</div>
	<!-- /.modal-dialog -->
</div>
<!-- /.modal -->


<script>
var myId;
var myName;
var beforeRoomId;
let webSocket;
const c_chatWin = document.querySelector("#chatLog");
const c_message = document.querySelector("#message");		
const c_send = document.querySelector("#send");
const c_exit = document.querySelector("#id_exit");
const c_chatWrap = document.querySelector("#chatWrap");
const c_header = document.querySelector("#chatHeader");
const c_chatForm = document.querySelector("#chatForm");
$(document).ready(function(){
	myId = localStorage.getItem("id");
	myName = getName(myId);
	//1.해당 페이지 오면 나에 관한 방정보들 세팅 
	showRoom();
}); // end of .ready

function fnEnterKey(roomId){
	console.log(roomId);
	if(window.event.keyCode == 13){
		console.log("엔터키 누름, 방번호 :",roomId);
		chatsend(roomId);
	}
}

// 스크롤 항상 아래로 하게 해주는 메서드
function scrollDown(){
	//채팅 다입력하고 스크롤 아래로 작동시키는 거
	let mySpace = document.querySelector("#chatLog"); 
	mySpace.scrollTop = mySpace.scrollHeight;
}


//해당 유저가 속한 채팅방 목록 뿌려주는 비동기 
function showRoom(){
    console.log("showRoom 입장", myId);
    var xhr = new XMLHttpRequest();
    var myIdData = {"myId" : myId};
    xhr.open("post", '/chat/getRoomsById', true);
	xhr.onreadystatechange = function() {
		if(xhr.readyState == 4 && xhr.status == 200){
			console.log("showRoom data", xhr.responseText);
			var data = JSON.parse(xhr.responseText);
			console.log(data);
			//console.log(data[0].chatRNo);
			for(var i in data){
				console.log(data[i].chatRNo);
			}
		}
	};
	xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
	xhr.send(JSON.stringify(myIdData));
}

function createRoom(){
	alert("createRoom 들어옴");
	
} // end of createRoom

//OJH 비동기로 이름 가져오기  
function getName(myId){
	var xhr = new XMLHttpRequest(); 
	var datao = {"myId" : myId};
	xhr.open("post",'/chat/getNameById',true);
	xhr.onreadystatechange = function(){
		if(xhr.readyState == 4 && xhr.status==200){
			console.log(xhr.responseText);
			myName = xhr.responseText;
		}
	};
	xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
	xhr.send(JSON.stringify(datao));
} // end of getname

// 해당방의 채팅내역가지고오기 
function getChatContent(roomId){
	console.log("getChatContent 접속!");
	var xhr2 = new XMLHttpRequest();
	var data = {"roomId" : roomId};
	var str = "";
	xhr2.open('post','/chat/getChatContent', true);
	xhr2.onreadystatechange = function(){
		if(xhr2.readyState == 4 && xhr2.status == 200){
			//console.log("채팅내역 : ", xhr2.responseText);
			var data = JSON.parse(xhr2.responseText);
			var mRoom = roomId;
			console.log("채팅방 내역정보들 : ",data);
	        c_header.innerText = data[0].roomTitle;
			for(let i in data){
					if(data[i].memberName == myName){
						str += `<div class="myMsg">`;
						str += ` <span style="font-size : 4px;">\${data[i].time} </span>`;
						str += `<span class="msg">\${data[i].chatContent}&nbsp&nbsp</span>`;
						str += `</div>`;
					   
					}else{				
					    str += `<div class="anotherMsg">`;
					    str += `<img class="me-2 avatar-sm rounded-circle" src="\${data[i].memberprofile}" alt="Generic placeholder image" style="float:left">`;
	                    str += `<span class="anotherName"> \${data[i].memberName}</span>`;
	                    str += `<span class="msg">\${data[i].chatContent}</span>`;
	                    str += ` <span style="font-size : 4px;">&nbsp&nbsp\${data[i].time}</span>`;
	                	str += `</div>`;
					}
			}
			c_chatWin.innerHTML = str;
			c_chatForm.children[0].setAttribute('onkeydown', `fnEnterKey(\${roomId})`);
		    scrollDown();
		}
	};
	xhr2.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
	xhr2.send(JSON.stringify(data));
	
}// end of getChatContent

function connect(roomId) {
	    beforeRoomId = roomId;
	    console.log("beforeRoomId : ", beforeRoomId);
	    c_chatWin.innerHTML = "";
		// 여기서 해당 방 채팅 내역 가져오는 비동기 처리 ㄱㄱ 
		// 각 체팅쓴사람의 이름과 이미지를 가져오는 작업   {memberName : '김진호', chatContent : '안녕' memberprofile : '/resources/image/sddd.png'}
	    getChatContent(roomId);
	    
	    webSocket = new WebSocket("ws://192.168.144.3/ws-chat"); // End Point   ws-chat/1234
		console.log("websocket : ", webSocket);
		//이벤트에 이벤트핸들러 뜽록 
		console.log("connect안의 myName",myName);
		console.log("connect안의 roomId", roomId);
		webSocket.onopen = () => {			
			console.log(webSocket.readyState); // 1이면 연결된거임 
			fOpen(roomId); // 소켓 접속되면 짜똥 실행할 함수(fOpen) -- 해당 방에 누가 접속했는지
			webSocket.onmessage = fMessage; // 써버에서 메쎄징 오면  짜똥 실행할 함수(fMessage) 
		}
		//채팅 글 넣고 전송누르면 
// 		$(document).on("click", "#send", function(){
// 				chatsend(roomId);
// 		})
		
	/* 	c_send.onsubmit = (event)=>{
			event.preventDefault();
				chatsend(roomId);
		};
		 */
	
		 c_send.onclick = ()=>{
			  chatsend(roomId);
			};
		 
		// 연결 끊깅
		c_exit.onclick = function() {
		 		disconnect(roomId);
		 };
} // end of connect

function fOpen(roomId) {
		var roomData = {roomId : roomId, myName : myName, myId : myId};
		console.log("fOpen안의 roomData :",roomData);
		console.log('chatSend에서 보냅니다~');
		webSocket.send(JSON.stringify(roomData));
} //end of fOpen

function chatsend(roomId) {  // 써버로 메쎄찡 떤쏭하는 함수
	document.body.scrollTop = document.body.scrollHeight;
	let msg = c_message.value;
	var roomData = {roomId : roomId, myName : myName, myId : myId, msg : msg};
	console.log(roomData);
	console.log('chatSend에서 보냅니다~');
	webSocket.send(JSON.stringify(roomData));	
	c_message.value = "";
} //end of send 

function fMessage() {
		let data = JSON.parse(event.data);
		console.log(data);
		var str2 = "";
		// 여기서도 작성자가 나이므로 나에대한 이름과 사진 을 가져오고 innerHTML해주면된다.
	/* 	console.log("서버에서 온 데이터 : ", data);
		console.log("문자 :",data.msg);
		console.log("이미지 :",data.img);
		console.log("웹브라우저 유저의 id : ", myId);
		console.log("백단에서 받은 유저의 id :", data.myId); */
		
		if(myId == data.myId){
			str2 += `<div class="myMsg">`;
            str2 += `<span style="font-size : 4px"> \${data.time}&nbsp&nbsp</span>`;
            str2 += `<span class="msg"> \${data.msg}</span>`;
        	str2 += `</div>`;
        	c_chatWin.innerHTML = c_chatWin.innerHTML + str2;
		}else {
		    str2 += `<div class="anotherMsg">`;
		    str2 += `<img class="me-2 avatar-sm rounded-circle" src="\${data.img}" alt="Generic placeholder image" style="float:left">`;
            str2 += `<span class="anotherName"> \${data.myName}</span>`;
            str2 += `<span class="msg">\${data.msg}</span>`;
            str2 += ` <span style="font-size : 4px;">&nbsp&nbsp\${data.time}</span>`;
        	str2 += `</div>`;
        	c_chatWin.innerHTML = c_chatWin.innerHTML + str2;
		}
		scrollDown();
     	
} //end of fMessage()

function disconnect(roomId) { //써버와 인연 끊는 함쑹
		console.log(roomId, myName);
		var roomData = {roomId : roomId, myName: myName, myId : myId, msg: "", connect : "end"};
		console.log('disconnect에서 보냅니다~');
		webSocket.send(JSON.stringify(roomData));
		webSocket.close();
} //end of disconnect()

function openRoom(roomId){
	console.log("roomId in openRoom :", roomId);
	console.log("beforeRoomId in openRoom :", beforeRoomId );
	console.log("beforeRoomId != undefined? ", beforeRoomId != undefined);
	if(beforeRoomId != undefined && roomId != beforeRoomId || beforeRoomId != undefined && roomId == beforeRoomId){
		disconnect(beforeRoomId);
	}

	connect(roomId);	
} //end of openRoon
</script>