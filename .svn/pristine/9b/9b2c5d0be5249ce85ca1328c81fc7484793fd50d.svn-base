<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>

<div class="content-page">
	<div class="content" style="height: 800px;">
		<!-- Start Content-->
		<div class="container-fluid" style="display:flex;margin: 30px;height: 100%;">
			<div class="col-xl-3">
				<div class="card" style="height: 100%;">
					<div class="card-body">
						<h4 class="header-title mb-3">
							채팅방 <i class="mdi mdi-account-multiple ms-1"></i>
							<div>
							<button id="mkChatRoom" class="openChatModal">새로운 방 만들기</button>
							</div>
							
						</h4>
						<div class="list-group">
							<a href="javascript:openRoom(123)" class="list-group-item list-group-item-action">
								<div class="d-flex align-items-center pb-1" id="tooltips-container" >
									<img src="/assets/images/users/user-5.jpg" class="rounded-circle img-fluid avatar-md img-thumbnail bg-transparent" alt="">
									<div class="w-100 ms-2">
										<h5 class="mb-1">
											1번체팅방
										</h5>
										<p class="mb-0 font-13 text-muted">Co Founder</p>
									</div>
									<i class="mdi mdi-chevron-right h2"></i>
								</div>
							</a> 
							<a href="javascript:openRoom(124)" class="list-group-item list-group-item-action">
								<div class="d-flex align-items-center pb-1" id="tooltips-container" >
									<img src="/assets/images/users/user-5.jpg" class="rounded-circle img-fluid avatar-md img-thumbnail bg-transparent" alt="">
									<div class="w-100 ms-2">
										<h5 class="mb-1">
											2번체팅방
										</h5>
										<p class="mb-0 font-13 text-muted">Co Founder</p>
									</div>
									<i class="mdi mdi-chevron-right h2"></i>
								</div>
							</a> 
						</div>
					</div>
				</div>
			</div>
			<!-- container -->
			<div class="col-xl-8" style="height: auto;">
				<div class="card" style="height: 100%;">
					<div class="card-body" style="display:flex;flex-direction: column;justify-content: flex-end;">


						<div class="border border-light p-2 mb-0">
							<div class="d-flex align-items-start">
								<img class="me-2 avatar-sm rounded-circle" src="/assets/images/users/user-4.jpg" alt="Generic placeholder image">
								<div class="w-100">
									<h5 class="">
										Thelma Fridley <small class="text-muted"> 1 hour ago</small>
									</h5>
									<div class="">
										안녕하세요 ?
									</div>
								</div>
							</div>
							<div>
								<div id="id_chatwin"></div>
								<input type="text" id="id_message" /> 
								<input type="button" id="id_send" value="떤쏭"> 
								<input type="button" id="id_exit" value="나갈령">
								</div>
						</div>

						<!-- comment box -->
						<form action="#" class="comment-area-box mb-3">
							<span class="input-icon"> <textarea rows="3" class="form-control" placeholder="Write something..."></textarea>
							</span>
							<div class="comment-area-btn">
								<div class="float-end">
								
								</div>
								<div>
									<a href="#" class="btn btn-sm btn-light text-black-50"><i class="far fa-user"> </i> </a>
								</div>
							</div>
						</form>
						<!-- end comment box -->

					</div>

				</div>
			</div>
		</div>
	</div>
</div>
<div>


</div>
<script>
var myId;
var myName;
$(document).ready(function(){
	myId = localStorage.getItem("id");
	myName = getName(myId);
});
//OJH 비동기로 이름 가져오기  

function getName(myId){
	var xhr = new XMLHttpRequest(); 
	var data = {"myId" : myId};
	xhr.open("post",'/chat/getNameById',true);
	xhr.onreadystatechange = function(){
		if(xhr.readyState == 4 && xhr.status==200){
			console.log(xhr.responseText);
			myName = xhr.responseText;
		}
	};
	xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
	xhr.send(JSON.stringify(data));
}

function openRoom(roomId){
	// axios 연습해보기 나중에 일단 만들고 
/* 	var data = {"myId" : myId};
	
	axios
	  .post("/chat/getNameById", data)
	  .then((name) => {
		 //1
		 
	  }); */
	console.log("roomId :", roomId);
	let webSocket; // 페이지 바뀌면 변수가 사라진다는 사실에 주목할 필요가 있음

	console.log(myName);
	
	const c_chatWin = document.querySelector("#id_chatwin");
	const c_message = document.querySelector("#id_message");		
	const c_send = document.querySelector("#id_send");
	const c_exit = document.querySelector("#id_exit");

	c_send.addEventListener("click", ()=>{
		send();
	});
	// 연결 끊깅
	c_exit.addEventListener("click", function () {
		disconnect();
	});

	//연결
	connect(roomId); // 1234
	function connect(roomId) {
		webSocket = new WebSocket("ws://192.168.144.3/ws-chat"); // End Point   ws-chat/1234
		//이벤트에 이벤트핸들러 뜽록 
		console.log("connect안의 myName",myName);
		console.log("connect안의 roomId", roomId);
		webSocket.onopen = fOpen(roomId); // 소켓 접속되면 짜똥 실행할 함수(fOpen)
		webSocket.onmessage = fMessage; // 써버에서 메쎄징 오면  짜똥 실행할 함수(fMessage) 
	}

	//연결 시
	function fOpen(roomId) {
		console.log("fOpen안의 roomId", roomId);
		webSocket.send(myName+ "님 입장.");
		// 여기다 roomId 넣어주고 
	} 
	function send() {  // 써버로 메쎄찡 떤쏭하는 함수
		let msg = c_message.value;
		webSocket.send(myName + ":" + msg);	
		c_message.value = "";
	}
	function fMessage() {
		let data = event.data;
		c_chatWin.innerHTML = c_chatWin.innerHTML + "<br/>" + data;
	}
	function disconnect() { //써버와 인연 끊는 함쑹
		webSocket.send(myId + "님이 나감");
		webSocket.close();
	}
}
</script>