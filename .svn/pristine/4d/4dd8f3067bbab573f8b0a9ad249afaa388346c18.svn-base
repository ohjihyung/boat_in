<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<style>
	#chat_modal {
		display : none;
		width : 300px;
		padding : 20px 60px;
		border : 1px solid #888;
		border-radius : 3px;
	}
	
	#chat_modal .chat_modal_close_btn {
		position :absolute;
		top :10px;
		right : 10px;
	}
</style>
<div class="content-page">
	<div class="content" style="height: 800px;">
		<!-- Start Content-->
		<div class="container-fluid" style="display:flex;margin: 30px;height: 100%;">
			<div class="col-xl-3">
				<div class="card" style="height: 100%;">
					<div class="card-body">
						<h4 class="header-title mb-3">
							채팅방 <i class="mdi mdi-account-multiple ms-1"></i>
							<div>
							<button id="mkChatRoom" class="openChatModal">새로운 방 만들기</button>
							</div>
						</h4>
						<div class="list-group">
							<a href="javascript:openRoom(123)" class="list-group-item list-group-item-action">
								<div class="d-flex align-items-center pb-1" id="tooltips-container" >
									<img src="/assets/images/users/user-5.jpg" class="rounded-circle img-fluid avatar-md img-thumbnail bg-transparent" alt="">
									<div class="w-100 ms-2">
										<h5 class="mb-1">
											1번chat팅방
										</h5>
										<p class="mb-0 font-13 text-muted">Co Founder</p>
									</div>
									<i class="mdi mdi-chevron-right h2"></i>
								</div>
							</a> 
							<a href="javascript:openRoom(124)" class="list-group-item list-group-item-action" >
								<div class="d-flex align-items-center pb-1" id="tooltips-container" >
									<img src="/assets/images/users/user-5.jpg" class="rounded-circle img-fluid avatar-md img-thumbnail bg-transparent" alt="">
									<div class="w-100 ms-2">
										<h5 class="mb-1">
											2번chat팅방
										</h5>
										<p class="mb-0 font-13 text-muted">Co Founder</p>
									</div>
									<i class="mdi mdi-chevron-right h2"></i>
								</div>
							</a> 
						</div>
					</div>
				</div>
			</div>
			<!-- container -->
			<div class="col-xl-8" style="height: auto;">
				<div class="card" style="height: 100%;">
					<div class="card-body" style="display:flex;flex-direction: column;justify-content: flex-end;">


						<div class="border border-light p-2 mb-0">
							<div class="d-flex align-items-start">
								<img class="me-2 avatar-sm rounded-circle" src="/assets/images/users/user-4.jpg" alt="Generic placeholder image">
								<div class="w-100">
									<h5 class="">
										Thelma Fridley <small class="text-muted"> 1 hour ago</small>
									</h5>
									<div class="">
										안녕하세요 ?
									</div>
								</div>
							</div>
						
						</div>
							<span class="input-icon"> <textarea rows="3" class="form-control" placeholder="Write something..."></textarea>
							</span>					
									<div>
										<div id="id_chatwin" style="overflow:auto; height:200px;"></div>
										<input type="text" id="id_message" /> 
										<input type="button" id="id_send" value="떤쏭"> 
										<input type="button" id="id_exit" value="나갈령">
									</div>
								</div>
							</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- 새로운방 만드는 모달창 -->
<div id="chat_modal">
	<a class ="chat_modal_close_btn">X</a>
</div>
<script>

var myId;
var myName;
var beforeRoomId;
let webSocket;
const c_chatWin = document.querySelector("#id_chatwin");
const c_message = document.querySelector("#id_message");		
const c_send = document.querySelector("#id_send");
const c_exit = document.querySelector("#id_exit");

$(document).ready(function(){
	myId = localStorage.getItem("id");
	myName = getName(myId);
});

//OJH 비동기로 이름 가져오기  
function getName(myId){
	var xhr = new XMLHttpRequest(); 
	var datao = {"myId" : myId};
	xhr.open("post",'/chat/getNameById',true);
	xhr.onreadystatechange = function(){
		if(xhr.readyState == 4 && xhr.status==200){
			console.log(xhr.responseText);
			myName = xhr.responseText;
		}
	};
	xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
	xhr.send(JSON.stringify(datao));
}

function connect(roomId) {
	   c_chatWin.innerHTML = "";
		webSocket = new WebSocket("ws://192.168.144.3/ws-chat"); // End Point   ws-chat/1234
		//이벤트에 이벤트핸들러 뜽록 
		console.log("connect안의 myName",myName);
		console.log("connect안의 roomId", roomId);
		webSocket.onopen = () => {
			console.log(webSocket.readyState); // 1이면 연결된거임 
			fOpen(roomId); // 소켓 접속되면 짜똥 실행할 함수(fOpen) -- 해당 방에 누가 접속했는지
			webSocket.onmessage = fMessage; // 써버에서 메쎄징 오면  짜똥 실행할 함수(fMessage) 
		}
		//채팅 글 넣고 전송누르면 
		c_send.onclick = ()=>{
				chatsend(roomId);
		};
		
		// 연결 끊깅
		c_exit.onclick = function() {
		 		disconnect(roomId);
		 };
}

function fOpen(roomId) {
		var roomData = {roomId : roomId, myName : myName, myId : myId};
		console.log("fOpen안의 roomData :",roomData);
		console.log('chatSend에서 보냅니다~');
		webSocket.send(JSON.stringify(roomData));
} //end of fOpen

function chatsend(roomId) {  // 써버로 메쎄찡 떤쏭하는 함수
	let msg = c_message.value;
	var roomData = {roomId : roomId, myName : myName, myId : myId, msg : msg};
	console.log(roomData);
	console.log('chatSend에서 보냅니다~');
	webSocket.send(JSON.stringify(roomData));	
	c_message.value = "";
} //end of send 

function fMessage() {
		let data = event.data;
		console.log("서버에서 온 데이터 : ", data);
		c_chatWin.innerHTML = c_chatWin.innerHTML + "<br/>" + data;
} //end of fMessage()

function disconnect(roomId) { //써버와 인연 끊는 함쑹
		console.log(roomId, myName);
		var roomData = {roomId : roomId, myName: myName, myId : myId, msg: "", connect : "end"};
		console.log('disconnect에서 보냅니다~');
		webSocket.send(JSON.stringify(roomData));
		webSocket.close();
} //end of disconnect()

function openRoom(roomId){
	beforeRoomId = roomId;
	console.log("roomId :", roomId);
	console.log(myName);
	/* if(beforeRoomId != roomId){
		disconnect(beforeRoomId);
	} */
	connect(roomId);	
} //end of openRoon
</script>