package kr.or.ddit.controller.subwork.service;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;

import kr.common.CommonDao;
import kr.or.ddit.mapper.SubWorkMapper;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.ProjectLogVO;
import kr.or.ddit.vo.SubWorkComentVO;
import kr.or.ddit.vo.SubWorkVO;
import kr.or.ddit.vo.TopWorkComentVO;
import kr.or.ddit.vo.TopWorkVO;
import lombok.extern.slf4j.Slf4j;
@Slf4j
@Controller
public class SubWorkServiceImpl implements ISubWorkService {
    @Inject
    private SubWorkMapper mapper;
    @Inject
    private CommonDao dao;
    
    @Override
    public void subWorkInsert(SubWorkVO subWorkVO) throws Exception {
        mapper.subWorkInsert(subWorkVO);
    }

    @Override
    public List<SubWorkVO> subWorkList(TopWorkVO topWorkVO) throws Exception {
        return mapper.subWorkList(topWorkVO);
    }

    @Override
    public SubWorkVO subWorkDetail(SubWorkVO vo) throws Exception {
        return dao.select("subWorkDetail", vo);
    }

    @Override
    public MemberVO selectSubWorkMember(SubWorkVO vo) throws Exception {
        return dao.select("selectSubWorkMember", vo);
    }

    @Override
    public MemberVO selectMemberListSubWork(SubWorkVO vo) throws Exception {
        return dao.select("selectMemberListSubWork", vo);
    }

    @Override
    public void subWorkUpdate_K(SubWorkVO subWorkVO) throws Exception {
        //진행률이 변경되었을 때 로그 기록하기
        Map<String, String> map = dao.select("selectOriginProgressSubWork", subWorkVO.getSubWorkNo());
        log.debug("서브워크 로그용 맵 : {}", map);
        String originProgress = map.get("SUBWORK_PROGRESS");
        String newProgress = subWorkVO.getSubWorkProgress();
        
        if (!originProgress.equals(newProgress)) {
            String proLogContent = "작업 진행률이 " + newProgress + "%로 변경되었습니다.";
            ProjectLogVO proLogVO = new ProjectLogVO();
            proLogVO.setProNo(map.get("PRO_NO"));
            proLogVO.setTopWorkNo(subWorkVO.getTopWorkNo());
            proLogVO.setSubWorkNo(subWorkVO.getSubWorkNo());
            proLogVO.setProLogContent(proLogContent);
            proLogVO.setProLogProgressOrigin(originProgress);
            proLogVO.setProLogProgressNew(newProgress);
            
            log.debug("인서트할 서브워크의 로그 : {}", proLogVO);
            dao.insert("subWorkProgressLogInsert", proLogVO);
        }
        
        
        dao.update("subWorkUpdate_K", subWorkVO);
    }

    @Override
    public List<ProjectLogVO> subWorkLogList(SubWorkVO subWorkVO) throws Exception {
        return dao.selectList("subWorkLogList", subWorkVO);
    }

    @Override
    public List<SubWorkComentVO> subWorkComentList(SubWorkVO subWorkVO) throws Exception {
        return dao.selectList("subWorkComentList", subWorkVO);
    }

    @Override
    public String subWorkComentInsert(SubWorkComentVO swComentVO) throws Exception {
        dao.insert("subWorkComentInsert", swComentVO);
        
        return swComentVO.getSwComentNo();
    }

    @Override
    public void subWorkComentDelete(SubWorkComentVO swComentVO) throws Exception {
        dao.update("subWorkComentDelete", swComentVO);
    }

    @Override
    public void subWorkComentUpdate(SubWorkComentVO swComentVO) throws Exception {
        dao.update("subWorkComentUpdate", swComentVO);
    }

}
